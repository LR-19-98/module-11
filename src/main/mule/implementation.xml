<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
	xmlns:american-flights-api="http://www.mulesoft.org/schema/mule/american-flights-api" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/american-flights-api http://www.mulesoft.org/schema/mule/american-flights-api/current/mule-american-flights-api.xsd
http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<flow name="getFlights" doc:id="32814f59-8bc3-4138-ab32-95ccff2e0e81" >
		<set-variable value="#[attributes.queryParams.airline]" doc:name="airline" doc:id="9b3282ea-d493-4fb9-86cc-43513da0608d" variableName="airline"/>
		<flow-ref doc:name="setCode" doc:id="300392d4-3a87-4e05-bd27-9ac165fba6ce" name="setCode"/>
		<validation:is-true doc:name="Is true" doc:id="a7765d8a-13ea-4807-b060-79c3820f21aa" expression="#[['SFO','LAX','CLE','PDX','PDF'] contains vars.code]" message="#['Invalid destination' ++ ' ' ++ (vars.code default ' ')]">
			<error-mapping sourceType="VALIDATION:INVALID_BOOLEAN" targetType="APP:INVALID_DESTNATION" />
		</validation:is-true>
		<choice doc:name="Choice" doc:id="17d8906d-8c05-47e9-bfd4-b71276fc3253" >
			<when expression="#[vars.airline == 'american']">
				<flow-ref doc:name="getAmericanFlights" doc:id="ee689d1a-f8c0-4a56-b946-c73dfc6290e4" name="getAmericanFlights"/>
			</when>
			<when expression="#[vars.airline == 'united']">
				<flow-ref doc:name="getUnitedFlights" doc:id="e7301f50-12d3-4ef9-a402-4b1e7c2d3215" name="getUnitedFlights"/>
			</when>
			<when expression="#[vars.airline == 'delta']">
				<flow-ref doc:name="getDeltaFlights" doc:id="551003a9-5dfd-42ac-8faf-4ddfb4380552" name="getDeltaFlights"/>
			</when>
			<otherwise >
				<flow-ref doc:name="getAllFlights" doc:id="cca6eb8b-9e76-4636-9249-6c3c696fabba" name="getAllFlights"/>
			</otherwise>
		</choice>
		<ee:transform doc:name="[Flights] to JSON" doc:id="389dd1e5-08c6-4c09-9b2a-ed81f57742b5" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="ce213a01-d117-49ef-a03d-6de119c2df56" />
		<error-handler >
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="eb681f50-98c1-4512-b62a-2328456aee42" type="AMERICAN-FLIGHTS-API:BAD_REQUEST">
				<ee:transform doc:name="error message" doc:id="6f17ec4e-212f-4ba6-a788-2139f19ba6b5" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: "There are no flights to " ++ vars.code as String
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="200" doc:name="httpStatus" doc:id="e296438b-a31d-4654-8639-dcfd2dc4d9b8" variableName="httpStatus"/>
			</on-error-continue>
			<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="66711274-8d00-4ebf-aa57-6511b84fc399" type="APP:INVALID_DESTNATION">
				<ee:transform doc:name="error.description" doc:id="94cf708e-484e-4e08-bf87-b494d5c1ddd1" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	message: error.description
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="400" doc:name="httpStatus" doc:id="bf2dbdb2-2736-4d41-8ffc-597f23a5ee26" variableName="httpStatus"/>
			</on-error-continue>
		</error-handler>
	</flow>
	<flow name="getAllFlights" doc:id="8269e89d-6b16-42f2-a019-0246319ca4b7" >
		<scatter-gather doc:name="Scatter-Gather" doc:id="6ef13f42-6007-4928-8530-d7f36e70e969" >
			<route >
				<try doc:name="Try" doc:id="0234e4f8-8309-4029-9b83-649edd192ca1" >
					<flow-ref doc:name="getAmericanFlights" doc:id="d2c51e7b-2ef6-4e48-96e0-8e7fa4180f1f" name="getAmericanFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="6c9f131a-8cdf-49f0-b7c3-279397069b7f" type="ANY">
							<ee:transform doc:name="[]" doc:id="3da87e03-a86d-4451-9e37-e924009983e8" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="6c14c2c2-3d11-47ef-83a3-6c5ac0f1a991" >
					<flow-ref doc:name="getUnitedFlights" doc:id="3ad8aa1e-f5df-4a83-b152-f2cc19088637" name="getUnitedFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="84f35f3f-3daf-4ccf-bcf3-bc6311acbc24" type="ANY">
							<ee:transform doc:name="[]" doc:id="a9000ac1-f360-4bd2-b11c-c89850223ddb" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
			<route >
				<try doc:name="Try" doc:id="1ba4e462-9dfa-4fbe-9e4f-947c72c4caed" >
					<flow-ref doc:name="getDeltaFlights" doc:id="21a3c93c-2718-4e83-ab8a-a7db923198a4" name="getDeltaFlights" />
					<error-handler >
						<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="af8ccd6c-475b-4340-ac5a-ee539eb4c8d1" type="ANY">
							<ee:transform doc:name="[]" doc:id="bc1b471a-6ff6-4be4-a2e3-9954292fc7a5" >
								<ee:message >
									<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
[]]]></ee:set-payload>
								</ee:message>
							</ee:transform>
						</on-error-continue>
					</error-handler>
				</try>
			</route>
		</scatter-gather>
		<ee:transform doc:name="flattern" doc:id="c48ec498-0760-42c7-815a-f00b68605363" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
flatten(payload..payload)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="1a326baf-c385-445c-b7cf-77727104e996" />
	</flow>
	<sub-flow name="setCode" doc:id="bc886bd3-f54e-4ba2-b952-792a157aecc4" >
		<set-variable value="#[attributes.queryParams.code]" doc:name="code" doc:id="dfa5499f-ec15-4545-8542-84017c94bb83" variableName="code"/>
	</sub-flow>
	<flow name="getAmericanFlights" doc:id="86e8d961-78e6-47a9-b1d5-9ab7ea719343" >
		<flow-ref doc:name="Flow Reference" doc:id="877bd575-a327-4282-9dad-08cdb54bed03" name="setCode"/>
		<american-flights-api:get-flights doc:name="Get flights" doc:id="9072c8c8-b5fd-4cb4-9e87-fe53e96ee1fb" config-ref="American_Flights_API_Config" client-id="${american.client_id}" client-secret="${american.client_secret}" destination="#[vars.code]"/>
		<ee:transform doc:name="JSON to [Flights]" doc:id="08357096-6bda-4dea-9422-3b72cb140e84" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload map ( payload01 , indexOfPayload01 ) -> {
	airlineName: 'American',
	availableSeats: payload01.emptySeats,
	departureDate: payload01.departureDate,
	destination: payload01.destination,
	flightCode: payload01.code,
	origination: payload01.origin,
	planeType: payload01.plane."type",
	price: payload01.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getUnitedFlights" doc:id="1ba97515-7707-47b6-9a72-2666bc397ec3" >
		<flow-ref doc:name="setCode" doc:id="5ce2b367-510a-4784-abf2-da8f29f2d364" name="setCode"/>
		<http:request method="GET" doc:name="Request" doc:id="fe194986-2560-4bb0-9960-4d852f5dbeba" config-ref="HTTP_Request_configuration" path="/united/flights/{dest}">
			<http:uri-params ><![CDATA[#[output application/java
---
{
	"dest" : vars.code
}]]]></http:uri-params>
		</http:request>
		<ee:transform doc:name="JSON to [Flights]" doc:id="9c6fb0d0-bc93-49e9-ab26-449d7c1cc9eb" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
payload.flights map ( flight , indexOfFlight ) -> {
	airlineName: flight.airlineName,
	availableSeats: flight.emptySeats,
	departureDate: flight.departureDate,
	destination: flight.destination,
	flightCode: flight.code,
	origination: flight.origin,
	planeType: flight.planeType,
	price: flight.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="getDeltaFlights" doc:id="012e3e17-edb8-4a0d-8e00-f417b0c03321" >
		<flow-ref doc:name="setCode" doc:id="ff333c80-b5e2-4a58-b99a-086e185cb54d" name="setCode"/>
		<ee:transform doc:name="Transform Message" doc:id="f7d21405-c1c1-4002-992b-969434bcf0db" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 http://soap.training.mulesoft.com/
---
{
	ns0#findFlight: {
		destination: vars.code
	}
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<wsc:consume doc:name="Consume" doc:id="64f1d629-89bc-4679-8cfd-de83d29884ae" config-ref="Web_Service_Consumer_Config" operation="findFlight"/>
		<ee:transform doc:name="SOAP to [Flights]" doc:id="b43c8148-35b6-4aa2-8d65-48d5cebb7e49" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
ns ns0 http://soap.training.mulesoft.com/
---
payload.body.ns0#findFlightResponse.*return map ( return , indexOfReturn ) -> {
	airlineName: return.airlineName,
	availableSeats: return.emptySeats,
	departureDate: return.departureDate,
	destination: return.destination,
	flightCode: return.code,
	origination: return.origin,
	planeType: return.planeType,
	price: return.price
} as Object {
	class : "com.mulesoft.training.Flight"
}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="postFlights" doc:id="d70449a7-f6cb-4515-b75e-bdea23a3d077" >
		<ee:transform doc:name="Transform Message" doc:id="f9782e6e-79af-4f5e-9098-e0e5fa17835b" >
			<ee:message >
				<ee:set-payload resource="json_flight_playground.dwl" />
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="DWoutput" ><![CDATA[%dw 2.0
output application/xml
---
data: {
	hub: "MUA",
	flight @(airline: payload.airline):{
	code: payload.toAirportCode
	
	
	}
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="2dfe0aec-0806-479d-9ddd-2ca78e9bfbab" message="#[vars.DWoutput]"/>
	</flow>
	<flow name="postMultipleFlights" doc:id="6676cd8f-a846-4759-a318-a9d84989563e" >
		<http:listener doc:name="POST/multipleflights" doc:id="6edb4800-ca2f-4cab-997a-bb043ccb576e" config-ref="HTTP_Listener_config" path="/multipleflights" allowedMethods="POST"/>
		<ee:transform doc:name="Transform Message" doc:id="eeb12f0b-e70c-4a23-82cc-51ba10a6d7f2" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/dw
type Currency = String {format: "###.00"}
import dasherize from dw::core::Strings
//var numSeats=400
//var numSeats = (x=400)->x
/*var numSeats = (planeType : String) ->
if(planeType contains('737'))
	150
else
	100*/
fun getNumSeats(planeType: String) = do {
	var maxSeats= if(planeType contains('737'))
	150
else
	300
	---
	maxSeats
	
	}
---

Flights: 
	(payload..*return map (object, index)->{
		flight: {
			dest: object.destination,
			price: object.price as Number as Currency,
			departuredate: object.departureDate,
			//totalSeats: getNumSeats(object.planeType),
			totalSeats: lookup("getTotalSeats",{planeType: object.planeType},200000),
			plane: dasherize(replace(object.planeType, /(Boing)/) with "Boeing" as String),
			date: object.departureDate as Date {format: "yyyy/MM/dd"} as String {format: "MMM dd,yyyy"}
		}
	}) distinctBy $ orderBy $.flight.price orderBy $.flight.date]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="b8c11c37-8247-42e5-b3dc-cf1bf1801465" />
	</flow>
	<flow name="getTotalSeats" doc:id="51cf8593-6a2b-49bf-bfb5-2be87bfad20c" >
		<ee:transform doc:name="Transform Message" doc:id="eb122ed6-04f5-43fe-8e71-981b38cfd247" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
fun getNumSeats(planeType: String) = do {
	var maxSeats= if(planeType contains('737'))
	150
else
	300
	---
	maxSeats
	
	}
---
	getNumSeats(payload.planeType)]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
</mule>
